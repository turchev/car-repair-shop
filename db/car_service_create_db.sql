
CREATE TABLE client (
	id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	last_name VARCHAR(40) DEFAULT NULL,
	first_name VARCHAR(40) DEFAULT NULL,
	patronnymic VARCHAR(40) DEFAULT NULL,
	phone VARCHAR(40) DEFAULT NULL
);  

CREATE TABLE mechanic (
	id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	last_name VARCHAR(40) DEFAULT NULL,
	first_name VARCHAR(40) DEFAULT NULL,
	patronnymic VARCHAR(40) DEFAULT NULL,
	wages DECIMAL(12,2) DEFAULT NULL,
	phone VARCHAR(40) DEFAULT NULL
);  

CREATE TABLE orders (
	id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	description VARCHAR(5000) DEFAULT NULL,
	client_id BIGINT DEFAULT NULL,
	mechanic_id BIGINT DEFAULT NULL,
	status VARCHAR(50) DEFAULT NULL,
	date_creat TIMESTAMP DEFAULT NULL,
	completion_date TIMESTAMP DEFAULT NULL,
	price DECIMAL(12,2) DEFAULT NULL,
	FOREIGN KEY (client_id) REFERENCES client(id),
	FOREIGN KEY (mechanic_id) REFERENCES mechanic(id)
);  

CREATE VIEW orders_with_fio AS
	SELECT orders.id, orders.description, orders.client_id, orders.mechanic_id, 
		orders.status, orders.date_creat, orders.completion_date, orders.price,
		CONCAT(client.last_name, ' ', LEFT(client.first_name, 1), '.', LEFT(client.patronnymic, 1),'.') AS client_fio,
		CONCAT(mechanic.last_name, ' ', LEFT(mechanic.first_name, 1), '.', LEFT(mechanic.patronnymic, 1),'.') AS mechanic_fio
	FROM orders
	LEFT JOIN client ON orders.client_id = client.id
	LEFT JOIN mechanic ON orders.mechanic_id = mechanic.id;

CREATE FUNCTION minutes_to_hours (in_mi INT) 
	RETURNS DECIMAL(12,2)
	LANGUAGE SQL
	BEGIN ATOMIC                    
		RETURN CAST((in_mi) AS DECIMAL(12,2)) / 60;                    
	END  
	
	     
    
-- select CAST(TIMESTAMPDIFF ( SQL_TSI_HOUR, date_creat, completion_date) AS DECIMAL(12,2)) / 60 from orders_with_fio;

-- SELECT mechanic.id,
    -- CONCAT(mechanic.last_name, ' ', LEFT(mechanic.first_name, 1), '.', LEFT(mechanic.patronnymic, 1),'.') AS mechanic_f_i_o,
    -- SUM(orders.price) AS price_all,
    -- orders.date_creat, orders.completion_date
-- FROM orders
-- LEFT JOIN mechanic ON orders.mechanic_id = mechanic.id
-- WHERE orders.status = 'Выполнен'
-- -- GROUP BY orders.mechanic_id, mechanic.id;

-- SELECT 
	-- COUNT(orders_with_fio.id) AS orders_sum, 
	-- SUM(DATEDIFF(mi, orders_with_fio.date_creat, orders_with_fio.completion_date)) AS minute_sum,
	-- SUM(orders_with_fio.price) AS price_sum
-- FROM orders_with_fio
-- WHERE  orders_with_fio.mechanic_id = '0' AND orders_with_fio.status = 'Выполнен';

SHUTDOWN;
